---
export interface Props {
    title: string;
    description: string;
    link: string;
    status?: string;
    icons: string[];
}

const { title, description, link, status, icons } = Astro.props as Props;
---


<div class="container">
    <div>
        <p class="title">{ title } </p>
        <span class="status-text">{ status }</span>
        <p class="description">{ description }</p>
    </div>
    
    <div>
        <div class="icon-container">
            {icons?.map((icon) => (
                <i class={ icon } />
              ))}
        </div>
    
        <a class="link" href={ link } target="_blank">Repository</a>
    </div>
    
</div>

<style>
    i {
        padding: 0.3em;
        font-size: 1.4rem;
    }
    .icon-container {
        background-color: var(--main);
        padding: 0.5em;
        border-radius: 10px;
    }

    .bottom-container {
        display: flex;
        align-items: center;
        width: 100%;
        justify-content: space-between;
    }

    .container {
        background-color: var(--secondary);
        margin: 0;
        border-radius: 10px;
        border-width: 0.1em;
        padding: 3em 1.2em;
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        justify-content: space-between;
    }

    .status-text {
        font-size: 0.65rem;
        position: absolute;
        margin-top: 0em;
        margin-left: 1em;
    }

    .title {
        font-size: 1.6rem;
        font-weight: 600;
        margin-top: 0;
        margin-bottom: 0;
    }

    .description {
        margin: 1em 0;
        font-size: 1.1rem;
    }

    .status {
        background-color: gray;
        border-radius: 5px;
        width: fit-content;
        margin: auto 0;
        padding: 0.4em 0.8em;
        font-size: 0.9rem;
    }

    .status p {
        margin: 0;
    }

    .link {
        border: solid rgb(var(--accent));
        border-radius: 60px;
        border-width: 0.12em;
        padding: 0.6em 1.4em;
        font-size: 1rem;
        color: rgb(var(--accent));
        text-decoration: none;
        font-weight: 500;
        margin: 1em 0;
        display: inline-block;
        transition: background-color 0.3s ease-in-out;
    }
    .link:hover {
        cursor: pointer;
        background-color: rgb(var(--accent));
        color: var(--secondary);
    }
</style>